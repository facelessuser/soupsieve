[build-system]
requires = [
    "hatchling>=0.21.1",
]
build-backend = "hatchling.build"

[project]
name = "soupsieve"
description = "A modern CSS selector implementation for Beautiful Soup."
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "Isaac Muse", email = "Isaac.Muse@gmail.com" },
]
keywords = [
    "CSS",
    "HTML",
    "XML",
    "selector",
    "filter",
    "query",
    "soup"
]
dynamic = [
    "classifiers",
    "version",
]

[project.urls]
Homepage = "https://github.com/facelessuser/soupsieve"

[tool.hatch.version]
source = "code"
path = "soupsieve/__meta__.py"

[tool.hatch.build.targets.wheel]
include = [
    "/soupsieve",
]

[tool.hatch.build.targets.sdist]
include = [
    "/docs/src/markdown/**/*.md",
    "/docs/src/markdown/**/*.gif",
    "/docs/src/markdown/**/*.png",
    "/docs/src/markdown/dictionary/*.txt",
    "/docs/theme/**/*.css",
    "/docs/theme/**/*.js",
    "/docs/theme/**/*.html",
    "/requirements/*.txt",
    "/soupsieve/**/*.py",
    "/soupsieve/py.typed",
    "/tests/**/*.py",
    "/.pyspelling.yml",
    "/.coveragerc",
    "/mkdocs.yml"
]

[tool.mypy]
files = [
    "soupsieve"
]
strict = true
show_error_codes = true

[tool.hatch.metadata.hooks.custom]

[tool.ruff]
line-length = 120

lint.select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "D",    # pydocstyle
    "C4",   # flake8-comprehensions
    "N",    # pep8-naming
    "E",    # pycodestyle
    "F",    # pyflakes
    "PGH",  # pygrep-hooks
    "RUF",  # ruff
    # "UP",   # pyupgrade
    "W",    # pycodestyle
    "YTT",  # flake8-2020,
    "PERF"  # Perflint
]

lint.ignore = [
    "E741",
    "D202",
    "D401",
    "D212",
    "D203",
    "N802",
    "N801",
    "N803",
    "N806",
    "N818",
    "RUF012",
    "RUF005",
    "PGH004",
    "RUF100"
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist =
    py{38,39,310,311,312},
    lint, nolxml, nohtml5lib

[testenv]
passenv = *
deps =
    -rrequirements/tests.txt
commands =
    mypy
    pytest --cov soupsieve --cov-append {toxinidir}
    coverage html -d {envtmpdir}/coverage
    coverage xml
    coverage report --show-missing

[testenv:documents]
passenv = *
deps =
    -rrequirements/docs.txt
commands =
    mkdocs build --clean --verbose --strict
    pyspelling

[testenv:lint]
passenv = *
deps =
    -rrequirements/lint.txt
commands =
    "{envbindir}"/ruff check .

[testenv:nolxml]
passenv = *
deps =
    -rrequirements/tests-nolxml.txt
commands =
    pytest {toxinidir}

[testenv:nohtml5lib]
passenv = *
deps =
    -rrequirements/tests-nohtml5lib.txt
commands =
    pytest {toxinidir}

[pytest]
filterwarnings =
    ignore:\nCSS selector pattern:UserWarning
"""
